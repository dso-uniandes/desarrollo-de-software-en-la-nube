name: anb
services:
  kafka:
    image: bitnamilegacy/kafka:4.0.0-debian-12-r10
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_CFG_ADVERTISED_LISTENERS}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/kraft-combined-logs
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    command:
      - /bin/bash
      - -c
      - |
        /opt/bitnami/scripts/kafka/run.sh &
        echo "‚è≥ Waiting for Kafka to start..."
        until kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1; do
            echo "‚è≥ Kafka not ready yet..."
          sleep 2
        done
        echo "üîÑ Creating topics..."
        kafka-topics.sh --create --if-not-exists --bootstrap-server localhost:9092 --topic video_tasks --partitions 1 --replication-factor 1
        echo "‚úÖ Done. Keeping container alive..."
        tail -f /dev/null
    healthcheck:
      test: ["CMD", "bash", "-c", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  worker:
    build:
      context: ./
      dockerfile: worker.Dockerfile
    container_name: worker
    command: ["python", "-m", "message_broker.worker"]
    depends_on:
      kafka:
        condition: service_healthy

    env_file:
      - ./.env
    volumes:
      - ./:/app